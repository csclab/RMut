setOpencl("gpu")
data(ccsn)
set1 <- generateStates(ccsn, 500)
print(set1)

ccsn <- generateGroups(ccsn, "all", 1, 0)
ccsn <- generateGroups(ccsn, "all", 0, 1)
ccsn <- generateGroups(ccsn, 5000, 0, 1, TRUE)

start.time <- Sys.time()

for(time in seq(2, 20, 2))
{
	ccsn <- calSensitivity(ccsn, set1, "state flip", 1, time, 10)
	ccsn <- calSensitivity(ccsn, set1, "rule flip", 1, time, 10)
	ccsn <- calSensitivity(ccsn, set1, "outcome shuffle", 1, time, 10)
	ccsn <- calSensitivity(ccsn, set1, "knockout", 1, time, 10)
	ccsn <- calSensitivity(ccsn, set1, "overexpression", 1, time, 10)

	ccsn <- calSensitivity(ccsn, set1, "edge removal", 2, time, 10)
	ccsn <- calSensitivity(ccsn, set1, "edge attenuation", 2, time, 10)
	ccsn <- calSensitivity(ccsn, set1, "edge sign switch", 2, time, 10)
	ccsn <- calSensitivity(ccsn, set1, "edge reverse", 2, time, 10)

	ccsn <- calSensitivity(ccsn, set1, "edge addition", 3, time, 10)
}

end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)

### Double-edge removals
.jinit(parameters="-Xmx3000m")
data(ccsn)
set1 <- generateStates(ccsn, 500)
print(set1)

ccsn <- generateGroups(ccsn, 600001, 0, 2, start = 900002)

start.time <- Sys.time()

ccsn <- calSensitivity(ccsn, set1, "edge removal", 1, 1000, 1)

end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)

