data(hsn)
set1 <- generateStates(hsn, 500)
print(set1)

hsn <- generateGroups(hsn, "all", 1, 0)
hsn <- generateGroups(hsn, "all", 0, 1)
hsn <- generateGroups(hsn, 5000, 0, 1, TRUE)

start.time <- Sys.time()

for(time in seq(2, 20, 2))
{
	hsn <- calSensitivity(hsn, set1, "state flip", 1, time, 10)
	hsn <- calSensitivity(hsn, set1, "rule flip", 1, time, 10)
	hsn <- calSensitivity(hsn, set1, "outcome shuffle", 1, time, 10)
	hsn <- calSensitivity(hsn, set1, "knockout", 1, time, 10)
	hsn <- calSensitivity(hsn, set1, "overexpression", 1, time, 10)

	hsn <- calSensitivity(hsn, set1, "edge removal", 2, time, 10)
	hsn <- calSensitivity(hsn, set1, "edge attenuation", 2, time, 10)
	hsn <- calSensitivity(hsn, set1, "edge sign switch", 2, time, 10)
	hsn <- calSensitivity(hsn, set1, "edge reverse", 2, time, 10)

	hsn <- calSensitivity(hsn, set1, "edge addition", 3, time, 10)
}

end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)