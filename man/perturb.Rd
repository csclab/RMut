% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{perturb}
\alias{perturb}
\title{Perturb a set of node/edge groups.}
\usage{
perturb(network, groupSet, mutateMethod = "rule flip")
}
\arguments{
\item{network}{The network contains the node/edge groups}

\item{groupSet}{The indexing number of node/edge groups in the network}

\item{mutateMethod}{The method of mutation to be performed, default is "rule flip"}
}
\value{
None. Error messages or information would be outputed to the screen.
}
\description{
Perturb a set of node/edge groups in a network.
}
\details{
This function perturbs a set of node/edge groups in a network.
Two parameters \code{groupSet}, and \code{mutateMethod}
have same meaning as in the \code{\link{calSensitivity}} function.
}
\examples{
data(amrn)
# Generate a group of two nodes and two edges in the AMRN network
amrn <- generateGroup(amrn, nodes = "AG, SUP", edges = "UFO (1) PI, LUG (-1) PI")
print(amrn$Group_1)

# Generate a specific initial-state for the AMRN network
state1 <- generateState(amrn, "1110011011")

# Find the original transition network (before making perturbations)
transNet <- findAttractors(amrn, state1)
print(transNet)

# Perturb the group with overexpression mutation,
#  in this case only two nodes (AG, SUP) of the group are affected by the mutation.
perturb(amrn, 1, "overexpression")

# Continuously perturb the group with edge-removal mutation,
#  in this case only two edges of the group are removed by the mutation.
perturb(amrn, 1, "edge removal")

# Continuously perturb the group with "state-flip" mutation,
#  thus only two nodes (AG, SUP) of the group are affected by the mutation.
perturb(amrn, 1, "state flip")

# Find the perturbed transition network
perturbed_transNet <- findAttractors(amrn, state1)
print(perturbed_transNet)
}
\seealso{
\code{\link{restore}}, \code{\link{generateGroups}}, \code{\link{generateGroup}}, \code{\link{calSensitivity}}, \code{\link{findAttractors}}
}

