% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{generateGroups}
\alias{generateGroups}
\title{Generate random node/edge groups.}
\usage{
generateGroups(networks, numGroups, nodeSize = 1, edgeSize = 0, newEdges = FALSE)
}
\arguments{
\item{networks}{A network or a set of networks contain the generated groups}

\item{numGroups}{Number of random groups to be generated for each network. If set to "all", all possible groups would be generated.}

\item{nodeSize}{Number of nodes in each group, default is 1}

\item{edgeSize}{Number of edges in each group, default is 0}

\item{newEdges}{If TRUE, new edges would be created for each group. Otherwise, existing edges of the networks are selected for each group.}
}
\value{
The updated network objects including generated groups
}
\description{
Generate random groups of node/edge in a network or in a set of networks.
}
\details{
This function generates random groups of elements in a network or in a set of networks.
The groups would be used to analyze the dynamics of the examined networks,
for ex., calculating sensitivity,  perturbing a network, or restoring a network to the origin.
Each element group contains only nodes, only edges, or a combination of nodes/edges.
}
\examples{
data(amrn)
# Generate all possible groups each containing a single node in the AMRN network
amrn <- generateGroups(amrn, "all", 1, 0)
print(amrn$Group_1)

# Generate all possible groups each containing a single edge in the AMRN network
amrn <- generateGroups(amrn, "all", 0, 1)
print(amrn$Group_2)

# Generate all possible groups each containing a new edge (the edge did not exist in the AMRN network)
amrn <- generateGroups(amrn, "all", 0, 1, TRUE)
print(amrn$Group_3)
}
\seealso{
\code{\link{calSensitivity}}, \code{\link{perturb}}, \code{\link{restore}}
}

