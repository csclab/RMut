% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{restore}
\alias{restore}
\title{Restore a set of node/edge groups.}
\usage{
restore(network, groupSet)
}
\arguments{
\item{network}{The network contains the node/edge groups}

\item{groupSet}{The indexing number of node/edge groups in the network}
}
\value{
None. Error messages or information would be outputed to the screen.
}
\description{
Restore a set of node/edge groups in a network.
}
\details{
This function restores a set of node/edge groups in a network to its normal condition.
And the parameter \code{groupSet}
has same meaning as in the \code{\link{calSensitivity}} function.
}
\examples{
data(amrn)
# Generate a group of two nodes in the AMRN network
amrn <- generateGroup(amrn, nodes = "AG, SUP")
print(amrn$Group_1)

# Generate a specific initial-state for the AMRN network
state1 <- generateState(amrn, "1110011011")

# Find the original transition network (before making perturbations)
transNet <- findAttractors(amrn, state1)
print(transNet)

# Perturb the group with overexpression mutation
perturb(amrn, 1, "overexpression")

# Continuously perturb the group with "state-flip" mutation
perturb(amrn, 1, "state flip")

# Find the perturbed transition network
perturbed_transNet <- findAttractors(amrn, state1)
print(perturbed_transNet)

# Restore the group from previous mutations
restore(amrn, 1)

# Find again the original transition network, it should be same with the "transNet" network
origin_transNet <- findAttractors(amrn, state1)
print(origin_transNet)
}
\seealso{
\code{\link{perturb}}, \code{\link{generateGroups}}, \code{\link{generateGroup}}, \code{\link{calSensitivity}}, \code{\link{findAttractors}}
}
